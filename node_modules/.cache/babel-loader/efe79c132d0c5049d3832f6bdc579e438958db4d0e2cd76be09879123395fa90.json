{"ast":null,"code":"var _jsxFileName = \"/Users/venya/Desktop/PROJECT/Hangman/hangman/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport { showNotification as show } from './helpers/Helpers';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\nfunction App() {\n  _s();\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n  function playAgain() {\n    setPlayable(true);\n\n    //Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = [Math.floor(Math.random() * words.length)];\n    selectedWord = words[random];\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      correctLetters: correctLetters,\n      wrongLetters: wrongLetters,\n      selectedWord: selectedWord,\n      setPlayable: setPlayable,\n      playAgain: playAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"01339m8ADmuWJa1yHmNYefcuCX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","showNotification","show","Notification","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","words","selectedWord","Math","floor","random","length","App","_s","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/venya/Desktop/PROJECT/Hangman/hangman/src/App.js"],"sourcesContent":["import React , {useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport { showNotification as show } from './helpers/Helpers';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\n\nimport './App.css';\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n\n    //Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = [Math.floor(Math.random() * words.length)];\n    selectedWord = words[random];\n  }\n\n  return (\n    < >\n      <Header/>\n      <div className = \"game-container\">\n        <Figure wrongLetters = {wrongLetters}/>\n        <WrongLetters wrongLetters = {wrongLetters}/>\n        <Word selectedWord = {selectedWord} correctLetters = {correctLetters}/>\n  \n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n        <Notification showNotification={showNotification}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}