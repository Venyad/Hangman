{"ast":null,"code":"var _jsxFileName = \"/Users/venya/Desktop/PROJECT/Hangman/src/components/Word.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Word = ({\n  selectedWord,\n  correctLetters\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Word\",\n    children: selectedWord.split('').map((letter, i) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"letter\",\n        children: correctLetters.includes(letter) ? letter : ''\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Word;\nexport default Word;\nvar _c;\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Word","selectedWord","correctLetters","className","children","split","map","letter","i","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/venya/Desktop/PROJECT/Hangman/src/components/Word.js"],"sourcesContent":["import React from 'react'\n\nconst Word = ({selectedWord, correctLetters}) => {\n  return (\n    <div className=\"Word\">\n      {selectedWord.split('').map((letter, i) => {\n          return (<span className=\"letter\" key={i}>\n            {correctLetters.includes(letter) ? letter : ''}\n          </span>)})}\n\n    </div>\n  )\n}\n\nexport default Word\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAC;EAACC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAC/C,oBACEH,OAAA;IAAKI,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBH,YAAY,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,KAAK;MACvC,oBAAQT,OAAA;QAAMI,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAC7BF,cAAc,CAACO,QAAQ,CAACF,MAAM,CAAC,GAAGA,MAAM,GAAG;MAAE,GADVC,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjC,CAAC;IAAC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEV,CAAC;AAAAC,EAAA,GAVKd,IAAI;AAYV,eAAeA,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}